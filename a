#!/bin/bash

# Set your GitLab API endpoint and credentials
API_ENDPOINT="https://your-gitlab-instance.com/api/v4"
PRIVATE_TOKEN="your-private-token"

# Set the project ID
PROJECT_ID=12345

# Set the age threshold (30 days)
AGE_THRESHOLD=30

# Get the list of jobs
RESPONSE=$(curl -s -X GET \
  $API_ENDPOINT/projects/$PROJECT_ID/jobs?per_page=100 \
  -H 'Authorization: Bearer '$PRIVATE_TOKEN \
  -H 'Content-Type: application/json')

# Extract the job IDs
JOB_IDS=($(jq -r '.[] |.id' <<< "$RESPONSE"))

# Loop through the job IDs and delete the job artifacts older than the threshold
for JOB_ID in "${JOB_IDS[@]}"; do
  RESPONSE=$(curl -s -X GET \
    $API_ENDPOINT/projects/$PROJECT_ID/jobs/$JOB_ID/artifacts?per_page=100 \
    -H 'Authorization: Bearer '$PRIVATE_TOKEN \
    -H 'Content-Type: application/json')

  # Extract the artifact IDs
  ARTIFACT_IDS=($(jq -r '.[] |.id' <<< "$RESPONSE"))

  # Loop through the artifact IDs and delete the ones older than the threshold
  for ARTIFACT_ID in "${ARTIFACT_IDS[@]}"; do
    RESPONSE=$(curl -s -X DELETE \
      $API_ENDPOINT/projects/$PROJECT_ID/jobs/$JOB_ID/artifacts/$ARTIFACT_ID \
      -H 'Authorization: Bearer '$PRIVATE_TOKEN \
      -H 'Content-Type: application/json')

    # Check if the deletion was successful
    if [ "$(jq -r '.message' <<< "$RESPONSE")" == "Artifact deleted successfully" ]; then
      echo "Deleted artifact $ARTIFACT_ID for job $JOB_ID"
    else
      echo "Error deleting artifact $ARTIFACT_ID for job $JOB_ID: $(jq -r '.error' <<< "$RESPONSE")"
    fi
  done
done
